hostname = "cbb0e482c7a5"
data_dir = "/var/lib/kapacitor"
skip-config-overrides = false
default-retention-policy = ""

[auth]
  enabled = true
  cache-expiration = "1h"
  bcrypt-cost = 4
  meta-addr = ""
  meta-username = ""
  meta-password = ""
  meta-use-tls = false
  meta-ca = ""
  meta-cert = ""
  meta-key = ""
  meta-insecure-skip-verify = false

[http]
  bind-address = ":9092"
  auth-enabled = true
  log-enabled = true
  write-tracing = false
  pprof-enabled = false
  https-enabled = false
  https-certificate = "/etc/ssl/kapacitor.pem"
  https-private-key = ""
  shutdown-timeout = "10s"
  shared-secret = ""

[replay]
  dir = "/var/lib/kapacitor/replay"

[storage]
  boltdb = "/var/lib/kapacitor/kapacitor.db"

[task]
  dir = "/root/.kapacitor/tasks"
  snapshot-interval = "1m0s"

[load]
  enabled = false
  dir = "/root/.kapacitor/load"

[[influxdb]]
  enabled = true
  name = "default"
  default = false
 # urls = ["https://metrics.solana.com:8089"]
  urls = ["http://35.224.128.87:8086"]
  username = "$KAPACITOR_USERNAME"
  password = "$KAPACITOR_PASSWORD"
  ssl-ca = ""
  ssl-cert = ""
  ssl-key = ""
  insecure-skip-verify = false
  timeout = "0s"
  disable-subscriptions = false
  subscription-protocol = "http"
  subscription-mode = "cluster"
  kapacitor-hostname = ""
  http-port = 0
  udp-bind = ""
  udp-buffer = 1000
  udp-read-buffer = 0
  startup-timeout = "5m0s"
  subscriptions-sync-interval = "1m0s"
  [influxdb.excluded-subscriptions]
    _kapacitor = ["autogen"]


[fluxtask]
  # Configure flux tasks for kapacitor
  enabled = true
  # The InfluxDB instance name (from the [[influxdb]] config section)
  # to store historical task run data in
  # Not recommended: use "none" to turn off historical task run data storage.
  task-run-influxdb = "default"
  # Bucket to store historical task run data in. We recommend leaving this empty; by default, data is written to the `kapacitor_fluxtask_logs` bucket or database.
  # If you have multiple Kapacitor instances and want to keep your data separate, specify the InfluxDB 2.x bucket or InfluxDB 1.x database to write to. For InfluxDB 1.x, use the `"mydb"` convention--the `"mydb/rp"` convention with the retention policy is not supported.
  task-run-bucket="kapacitor_fluxtask_logs"
  # The organization name or ID if storing historical task run data
  # in InfluxDB 2.x or InfluxDB Cloud
  task-run-org = ""
  task-run-orgid = ""
  # The measurement name for the historical task run data
  task-run-measurement = "runs"

[logging]
  file = "STDERR"
  level = "DEBUG"

[config-override]
  enabled = true

[collectd]
  enabled = false
  bind-address = ":25826"
  database = "collectd"
  retention-policy = ""
  batch-size = 5000
  batch-pending = 10
  batch-timeout = "10s"
  read-buffer = 0
  typesdb = "/usr/share/collectd/types.db"

[opentsdb]
  enabled = false
  bind-address = ":4242"
  database = "opentsdb"
  retention-policy = ""
  consistency-level = "one"
  tls-enabled = false
  certificate = "/etc/ssl/influxdb.pem"
  batch-size = 1000
  batch-pending = 5
  batch-timeout = "1s"
  log-point-errors = true

[alerta]
  enabled = false
  url = ""
  insecure-skip-verify = false
  token = ""
  token-prefix = ""
  environment = ""
  origin = ""
  timeout = "0s"

[hipchat]
  enabled = false
  url = ""
  token = ""
  room = ""
  global = false
  state-changes-only = false

[[kafka]]
  enabled = false
  id = "default"
  timeout = "0s"
  batch-size = 0
  batch-timeout = "0s"
  use-ssl = false
  ssl-ca = ""
  ssl-cert = ""
  ssl-key = ""
  insecure-skip-verify = false

[[mqtt]]
  enabled = false
  name = "default"
  default = false
  url = ""
  ssl-ca = ""
  ssl-cert = ""
  ssl-key = ""
  insecure-skip-verify = false
  client-id = ""
  username = ""
  password = ""

[opsgenie]
  enabled = false
  api-key = ""
  url = "https://api.opsgenie.com/v1/json/alert"
  recovery_url = "https://api.opsgenie.com/v1/json/alert/note"
  global = false

[opsgenie2]
  enabled = false
  api-key = ""
  url = "https://api.opsgenie.com/v2/alerts"
  recovery_action = "notes"
  global = false

[pagerduty]
  enabled = false
  url = "https://events.pagerduty.com/generic/2010-04-15/create_event.json"
  service-key = ""
  global = false

[pagerduty2]
  enabled = false
  url = "https://events.pagerduty.com/v2/enqueue"
  routing-key = ""
  global = false

[pushover]
  enabled = false
  token = ""
  user-key = ""
  url = "https://api.pushover.net/1/messages.json"

[[httppost]]
  endpoint = "discord-canaries-monitoring"
  url = "$DISCORD_WEBHOOK_CANARIES_MONITORING"
  headers = { "Content-Type" = "application/json" }
  alert-template = "{ \"username\": \"kapacitor\", \"content\": \"{{.Message}}\"}"

[[httppost]]
  endpoint = "discord-canaries-monitoring-panic-check"
  url = "$DISCORD_WEBHOOK_CANARIES_MONITORING"
  headers = { "Content-Type" = "application/json" }
  alert-template = "{ \"username\": \"kapacitor\", \"content\": \"{{range .Data.Series}}{{$columns := .Columns}}{{range .Values}}⚠️\\n`{{index . 1}}`\\n{{index . 2}}){{end}}{{end}}\" }"

[[httppost]]
  endpoint = "discord-mb-pager-duty"
  url = "$DISCORD_WEBHOOK_MB_PAGER_DUTY"
  headers = { "Content-Type" = "application/json" }
  alert-template = "{ \"username\": \"kapacitor\", \"content\": \"{{.Message}}\"}"

[[httppost]]
  endpoint = "discord-testnet-pager-duty"
  url = "$DISCORD_WEBHOOK_TESTNET_PAGER_DUTY"
  headers = { "Content-Type" = "application/json" }
  alert-template = "{ \"username\": \"kapacitor\", \"content\": \"{{.Message}}\"}"

[[httppost]]
  endpoint = "discord-devnet-pager-duty"
  url = "$DISCORD_WEBHOOK_DEVNET_PAGER_DUTY"
  headers = { "Content-Type" = "application/json" }
  alert-template = "{ \"username\": \"kapacitor\", \"content\": \"{{.Message}}\"}"

[smtp]
  enabled = false
  host = "localhost"
  port = 25
  username = ""
  password = ""
  no-verify = false
  global = false
  state-changes-only = false
  from = ""
  idle-timeout = "30s"

[snmptrap]
  enabled = false
  addr = "localhost:162"
  community = "kapacitor"
  retries = 1

[sensu]
  enabled = false
  addr = ""
  source = "Kapacitor"

[[slack]]
  enabled = false
  default = true
  workspace = ""
  url = ""
  channel = ""
  username = "kapacitor"
  icon-emoji = ""
  global = false
  state-changes-only = false
  ssl-ca = ""
  ssl-cert = ""
  ssl-key = ""
  insecure-skip-verify = false

[talk]
  enabled = false
  url = ""
  author_name = ""

[telegram]
  enabled = false
  url = "https://api.telegram.org/bot"
  token = ""
  chat-id = ""
  parse-mode = ""
  disable-web-page-preview = false
  disable-notification = false
  global = false
  state-changes-only = false

[victorops]
  enabled = false
  api-key = ""
  routing-key = ""
  url = "https://alert.victorops.com/integrations/generic/20131114/alert"
  global = false
  json-data = false

[[discord]]
  enabled = true
  default = false
  url = "$CANARIES-MONITORING"
  workspace = "canaries-monitoring"
  timestamp = true
  username = "canaries-bot"
  avatar-url = "https://influxdata.github.io/branding/img/downloads/influxdata-logo--symbol--pool-alpha.png"
  embed-title = "Alert"
  global = false
  state-changes-only = false

[[discord]]
  enabled = true
  default = true
  url = "$MB-PAGER-DUTY"
  workspace = "mb-pager-duty"
  timestamp = true
  username = "cluster-bot"
  avatar-url = "https://influxdata.github.io/branding/img/downloads/influxdata-logo--symbol--pool-alpha.png"
  embed-title = "Alert"
  global = false
  state-changes-only = false

[[discord]]
  enabled = true
  default = false
  url = "$TESNET-PAGER-DUTY"
  workspace = "testnet-pager-duty"
  timestamp = true
  username = "cluster-bot-testnet"
  avatar-url = "https://influxdata.github.io/branding/img/downloads/influxdata-logo--symbol--pool-alpha.png"
  embed-title = "Alert"
  global = false
  state-changes-only = false

[[discord]]
  enabled = true
  default = false
  url = "$DEVNET-PAGER-DUTY"
  workspace = "devnet-pager-duty"
  timestamp = true
  username = "cluster-bot-devnet"
  avatar-url = "https://influxdata.github.io/branding/img/downloads/influxdata-logo--symbol--pool-alpha.png"
  embed-title = "Alert"
  global = false
  state-changes-only = false

[reporting]
  enabled = true
  url = "https://usage.influxdata.com"

[stats]
  enabled = true
  stats-interval = "10s"
  database = "_kapacitor"
  retention-policy = "autogen"
  timing-sample-rate = 0.1
  timing-movavg-size = 1000

[udf]

[deadman]
  interval = "10s"
  threshold = 0.0
  id = "{{ .Group }}:NODE_NAME for task '{{ .TaskName }}'"
  message = "{{ .ID }} is {{ if eq .Level \"OK\" }}alive{{ else }}dead{{ end }}: {{ index .Fields \"emitted\" | printf \"%0.3f\" }} points/INTERVAL."
  global = false
