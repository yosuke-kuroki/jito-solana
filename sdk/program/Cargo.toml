[package]
name = "solana-program"
description = "Solana Program"
documentation = "https://docs.rs/solana-program"
readme = "README.md"
version = { workspace = true }
authors = { workspace = true }
repository = { workspace = true }
homepage = { workspace = true }
license = { workspace = true }
edition = { workspace = true }
rust-version = "1.79.0"                          # solana platform-tools rust version

[dependencies]
bincode = { workspace = true }
blake3 = { workspace = true, features = ["traits-preview"] }
borsh = { workspace = true, optional = true }
borsh0-10 = { workspace = true, optional = true }
bs58 = { workspace = true, features = ["alloc"] }
bytemuck = { workspace = true }
lazy_static = { workspace = true }
log = { workspace = true }
memoffset = { workspace = true }
num-derive = { workspace = true }
num-traits = { workspace = true, features = ["i128"] }
serde = { workspace = true }
serde_bytes = { workspace = true }
serde_derive = { workspace = true }
solana-account-info = { workspace = true, features = ["bincode"] }
solana-atomic-u64 = { workspace = true }
solana-bincode = { workspace = true }
solana-borsh = { workspace = true, optional = true }
solana-clock = { workspace = true, features = ["serde", "sysvar"] }
solana-cpi = { workspace = true }
solana-decode-error = { workspace = true }
solana-epoch-rewards = { workspace = true, features = ["serde", "sysvar"] }
solana-epoch-schedule = { workspace = true, features = ["serde", "sysvar"] }
solana-feature-gate-interface = { workspace = true, features = ["bincode"] }
solana-fee-calculator = { workspace = true, features = ["serde"] }
solana-frozen-abi = { workspace = true, optional = true, features = ["frozen-abi"] }
solana-frozen-abi-macro = { workspace = true, optional = true, features = ["frozen-abi"] }
solana-hash = { workspace = true, features = [
    "bytemuck",
    "serde",
    "std",
] }
solana-instruction = { workspace = true, default-features = false, features = [
    "bincode",
    "serde",
    "std",
] }
solana-instructions-sysvar = { workspace = true }
solana-keccak-hasher = { workspace = true, features = ["sha3"] }
solana-last-restart-slot = { workspace = true, features = ["serde", "sysvar"] }
solana-message = { workspace = true, features = ["bincode", "blake3"] }
solana-msg = { workspace = true }
solana-native-token = { workspace = true }
solana-nonce = { workspace = true, features = ["serde"] }
solana-program-entrypoint = { workspace = true }
solana-program-error = { workspace = true, features = ["serde"] }
solana-program-memory = { workspace = true }
solana-program-option = { workspace = true }
solana-program-pack = { workspace = true }
solana-pubkey = { workspace = true, features = ["bytemuck", "curve25519", "serde", "std"] }
solana-rent = { workspace = true, features = ["serde", "sysvar"] }
solana-sanitize = { workspace = true }
solana-sdk-ids = { workspace = true }
solana-sdk-macro = { workspace = true }
solana-secp256k1-recover = { workspace = true }
solana-serde-varint = { workspace = true }
solana-serialize-utils = { workspace = true }
solana-sha256-hasher = { workspace = true, features = ["sha2"] }
solana-short-vec = { workspace = true }
solana-slot-hashes = { workspace = true, features = ["serde", "sysvar"] }
solana-slot-history = { workspace = true, features = ["serde", "sysvar"] }
solana-stable-layout = { workspace = true }
solana-system-interface = { workspace = true, features = ["bincode"] }
solana-sysvar = { workspace = true, features = ["bincode", "bytemuck"] }
solana-sysvar-id = { workspace = true }
thiserror = { workspace = true }

# This is currently needed to build on-chain programs reliably.
# Borsh 0.10 may pull in hashbrown 0.13, which uses ahash 0.8, which uses
# getrandom 0.2 underneath. This explicit dependency allows for no-std if cargo
# upgrades Borsh's dependency to hashbrown 0.13.
# Remove this once borsh 0.11 or 1.0 is released, which correctly declares the
# hashbrown dependency as optional.
[target.'cfg(target_os = "solana")'.dependencies]
getrandom = { workspace = true, features = ["custom"] }
solana-define-syscall = { workspace = true }

[target.'cfg(not(target_os = "solana"))'.dependencies]
num-bigint = { workspace = true }
rand = { workspace = true }

[target.'cfg(not(target_os = "solana"))'.dev-dependencies]
arbitrary = { workspace = true, features = ["derive"] }
solana-logger = { workspace = true }

[target.'cfg(target_arch = "wasm32")'.dependencies]
console_error_panic_hook = { workspace = true }
console_log = { workspace = true }
getrandom = { workspace = true, features = ["js", "wasm-bindgen"] }
wasm-bindgen = { workspace = true }

[dev-dependencies]
array-bytes = { workspace = true }
assert_matches = { workspace = true }
itertools = { workspace = true }
serde_json = { workspace = true }
solana-pubkey = { workspace = true, features = ["dev-context-only-utils"] }
solana-sysvar = { workspace = true, features = ["dev-context-only-utils"] }

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu", "wasm32-unknown-unknown"]
all-features = true
rustdoc-args = ["--cfg=docsrs"]

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["borsh"]
borsh = [
    "dep:borsh",
    "dep:borsh0-10",
    "dep:solana-borsh",
    "solana-hash/borsh",
    "solana-instruction/borsh",
    "solana-program-error/borsh",
    "solana-pubkey/borsh"
]
dev-context-only-utils = []
frozen-abi = [
    "dep:solana-frozen-abi",
    "dep:solana-frozen-abi-macro",
    "solana-epoch-rewards/frozen-abi",
    "solana-epoch-schedule/frozen-abi",
    "solana-fee-calculator/frozen-abi",
    "solana-hash/frozen-abi",
    "solana-instruction/frozen-abi",
    "solana-message/frozen-abi",
    "solana-pubkey/frozen-abi",
    "solana-rent/frozen-abi",
    "solana-short-vec/frozen-abi",
    "solana-sysvar/frozen-abi"
]

[lints]
workspace = true
