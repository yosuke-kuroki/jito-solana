name: CI/CD

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
          cache: "npm"
      - name: build
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/edge/install)"
          PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"
          solana --version
          npm install -g npm@7
          npm install
          npm run build
          ls -l lib
          test -r lib/index.iife.js
          test -r lib/index.cjs.js
          test -r lib/index.esm.js
          npm run ok
          npm run codecov
          npm run test:live-with-test-validator
          rm -rf deploy
          mkdir -p deploy
          cp -r doc deploy/docs
          cp lib/index.iife.js deploy/solanaWeb3.min.js
      - uses: actions/upload-artifact@v3
        with:
          name: build
          path: deploy/

  gh-page:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: build
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs

  semantic-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
          cache: "npm"
      - run: |
          npm install -g npm@7
          npm install
          npx semantic-release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  gh-release:
    needs: [build, semantic-release]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get Tag
        id: get_tag
        run: echo "::set-output name=tag::$(git tag --points-at HEAD)"
      - name: Create Release
        if: steps.get_tag.outputs.tag
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_tag.outputs.tag }}
          release_name: ${{ steps.get_tag.outputs.tag }}
          draft: false
          prerelease: false
